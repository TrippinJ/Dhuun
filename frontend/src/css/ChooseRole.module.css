/* üåü Background Styling */
.roleContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100vh;
  text-align: center;
  background-color: #000; /* Ensure black base background */
  position: relative;
}

/* üé® Background Image Positioned on the Side */
.roleContainer::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0; /* Align the background to the right side */
  width: 40%; /* Adjust width to control how much of the screen it covers */
  height: 100%;
  background: url("../Assets/bg.jpeg") no-repeat center center/cover;
  z-index: 0;
}

/* üìù Content Box */
.content {
  background: #ffba00;
  padding: 30px;
  border-radius: 15px;
  backdrop-filter: blur(5px);
  z-index: 1;
  left: 20%;
  position: relative;
}

/* üéµ Logo Styling */
.logo {
  width: 140px;
  margin-bottom: 20px;
  animation: slideDown 0.5s ease-in-out;
  position: relative;
  z-index: 1;
  left:20%;
}

/* üîò Role Cards */
.roleCards {
  display: flex;
  justify-content: center;
  gap: 30px;
  margin-top: 20px;
}

.roleCard {
  background: white;
  color:black;
  padding: 20px;
  border-radius: 10px;
  width: 250px;
  cursor: pointer;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  text-align: center;
}

.roleCard:hover {
  transform: scale(1.05);
  box-shadow: 0px 5px 15px rgba(255, 255, 255, 0.2);
}

.roleCard h3 {
  font-size: 18px;
  font-weight: bold;
  margin-top: 10px;
}

.roleCard p {
  font-size: 14px;
  margin-top: 5px;
  opacity: 0.8;
}

/* üé≠ Icons */
.icon {
  font-size: 40px;
  color: #ffba00;
}

/* üì± Mobile Responsive */
@media (max-width: 768px) {
  .roleContainer::before {
    width: 100%; /* Make background cover full width on mobile */
    height: 40%; /* Adjust height */
    bottom: 0;
    top: auto;
  }

  .roleCards {
    flex-direction: column;
  }

  .roleCard {
    width: 80%;
  }
}

/* ‚ú® Animations */
@keyframes slideDown {
  from {
    opacity: 0;
    transform: translateY(-30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
